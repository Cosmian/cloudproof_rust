from typing import Optional

class Hasher:
    def __init__(self, hasher_method: str, salt: Optional[bytes] = None) -> None: ...
    def apply(self, data: bytes) -> str: ...

class NoiseGenerator:
    @staticmethod
    def new_with_parameters(method_name: str, mean: float, std_dev: float): ...
    @staticmethod
    def new_date_with_parameters(
        method_name: str, mean: float, std_dev: float, time_unit: str
    ): ...
    @staticmethod
    def new_with_bounds(method_name: str, min_bound: float, max_bound: float): ...
    def apply_on_float(self, data: float) -> float: ...
    def apply_on_int(self, data: int) -> int: ...
    def apply_on_date(self, date: str) -> str: ...
